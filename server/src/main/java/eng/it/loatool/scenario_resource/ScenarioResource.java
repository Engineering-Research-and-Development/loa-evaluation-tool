package eng.it.loatool.scenario_resource;
// Generated Nov 14, 2018 1:28:54 PM by Hibernate Tools 5.2.11.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import com.fasterxml.jackson.annotation.JsonProperty;

import eng.it.loatool.PkTbPrimaryKeyOwner;
import eng.it.loatool.resource.Resource;
import eng.it.loatool.subprocess_level.SubProcessLevel;

/**
 * TbAceScenarioRes generated by hbm2java
 */
@Entity
@Table(name = "TB_ACE_SCENARIO_RES", catalog = "loa_evaluation_tool")
public class ScenarioResource implements java.io.Serializable, PkTbPrimaryKeyOwner {

    @JsonProperty private Integer pkTbId;

    private Integer fkTbAceSubProLev;
    private SubProcessLevel subprocessLevel;

    private Integer fkTbAceRes;
    private Resource resource;

    private Integer fkTbAceScenarios;
    private Double optionalCost;
    private Double weightedPhysicalLoa;
    private Double weightedCognitiveLoa;
    private Integer numberSelected;
    private Boolean fixedCost;
    private Date createDate;
    private Date updateDate;

    public ScenarioResource() {}

    public ScenarioResource(Integer fkTbAceSubProLev, Integer fkTbAceRes, Date createDate, Date updateDate, Integer fkTbAceScenarios, Double optionalCost, Double weightedPhysicalLoa, Double weightedCognitiveLoa) {
        this.fkTbAceSubProLev = fkTbAceSubProLev;
        this.fkTbAceRes = fkTbAceRes;
        this.createDate = createDate;
        this.updateDate = updateDate;
        this.fkTbAceScenarios = fkTbAceScenarios;
        this.optionalCost = optionalCost;
        this.weightedPhysicalLoa = weightedPhysicalLoa;
        this.weightedCognitiveLoa = weightedCognitiveLoa;
    }

    @Override
    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "PK_TB_ID", unique = true, nullable = false)
    public Integer getPkTbId() {
        return this.pkTbId;
    }

    @Override
    public void setPkTbId(Integer pkTbId) {
        this.pkTbId = pkTbId;
    }

    @Column(name = "FK_TB_ACE_SUB_PRO_LEV", nullable = false)
    public Integer getFkTbAceSubProLev() {
        return this.fkTbAceSubProLev;
    }

    public void setFkTbAceSubProLev(Integer fkTbAceSubProLev) {
        this.fkTbAceSubProLev = fkTbAceSubProLev;
    }

    @Column(name = "FK_TB_ACE_RES", nullable = false)
    public Integer getFkTbAceRes() {
        return this.fkTbAceRes;
    }

    @Transient
    public SubProcessLevel getSubprocessLevel() {
        return subprocessLevel;
    }

    public void setSubprocessLevel(SubProcessLevel subprocessLevel) {
        this.subprocessLevel = subprocessLevel;
    }

    @Transient
    public Resource getResource() {
        return resource;
    }

    public void setResource(Resource resource) {
        this.resource = resource;
    }

    public void setFkTbAceRes(Integer fkTbAceRes) {
        this.fkTbAceRes = fkTbAceRes;
    }

    @Column(name = "FK_TB_ACE_SCENARIOS", nullable = false)
    public Integer getFkTbAceScenarios() {
        return this.fkTbAceScenarios;
    }

    public void setFkTbAceScenarios(Integer fkTbAceScenarios) {
        this.fkTbAceScenarios = fkTbAceScenarios;
    }

    @Column(name = "OPTIONAL_COST", nullable = false, precision = 22, scale = 0)
    public Double getOptionalCost() {
        return this.optionalCost;
    }

    public void setOptionalCost(Double optionalCost) {
        this.optionalCost = optionalCost;
    }

    @Column(name = "WEIGHTED_PHYSICAL_LOA", nullable = false, precision = 22, scale = 0)
    public Double getWeightedPhysicalLoa() {
        return this.weightedPhysicalLoa;
    }

    public void setWeightedPhysicalLoa(Double weightedPhysicalLoa) {
        this.weightedPhysicalLoa = weightedPhysicalLoa;
    }

    @Column(name = "WEIGHTED_COGNITIVE_LOA", nullable = false, precision = 22, scale = 0)
    public Double getWeightedCognitiveLoa() {
        return this.weightedCognitiveLoa;
    }

    public void setWeightedCognitiveLoa(Double weightedCognitiveLoa) {
        this.weightedCognitiveLoa = weightedCognitiveLoa;
    }

    @Column(name = "NUMBER_SELECTED", nullable = false)
    public Integer getNumberSelected() {
        return numberSelected;
    }

    public void setNumberSelected(Integer numberSelected) {
        this.numberSelected = numberSelected;
    }

    @Column(name = "FIXED_COST")
    public Boolean getFixedCost() {
	return this.fixedCost;
    }

    public void setFixedCost(Boolean fixedCost) {
	this.fixedCost = fixedCost;
    }

    @CreationTimestamp
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATE_DATE", updatable = false, nullable = false, length = 19)
    public Date getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    @UpdateTimestamp
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATE_DATE", nullable = false, length = 19)
    public Date getUpdateDate() {
        return this.updateDate;
    }

    public void setUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }

    @Override
    public String toString() {
        return "ScenarioResource [pkTbId=" + pkTbId + ", fkTbAceSubProLev=" + fkTbAceSubProLev + ", subprocessLevel=" + subprocessLevel + ", fkTbAceRes=" + fkTbAceRes + ", resource=" + resource + ", createDate=" + createDate + ", updateDate=" + updateDate + ", fkTbAceScenarios=" + fkTbAceScenarios + ", optionalCost=" + optionalCost + ", weightedPhysicalLoa=" + weightedPhysicalLoa + ", weightedCognitiveLoa=" + weightedCognitiveLoa + "]";
    }

}
