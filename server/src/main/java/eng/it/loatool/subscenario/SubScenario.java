package eng.it.loatool.subscenario;
// Generated Sep 24, 2018 11:43:01 AM by Hibernate Tools 5.2.11.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;
import org.hibernate.annotations.UpdateTimestamp;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import eng.it.loatool.PkTbPrimaryKeyOwner;
import eng.it.loatool.resource.Resource;
import eng.it.loatool.subprocess_level.SubProcessLevel;

/**
 * TbAceSubScenarios generated by hbm2java
 */
@Entity @Table(name = "TB_ACE_SUB_SCENARIOS", catalog = "loa_evaluation_tool")
public class SubScenario implements java.io.Serializable, PkTbPrimaryKeyOwner {

    @JsonProperty private Integer pkTbId;
    private Integer fkTbAceProSeq;

    @JsonProperty(access = Access.WRITE_ONLY) private Integer fkTbAceSubProLev;
    private SubProcessLevel subprocessLevel;

    @JsonProperty(access = Access.WRITE_ONLY) private Integer fkTbAceRes;
    private Resource resource;

    private Integer scenarioNumber;
    private Integer processTime;
    private Double assemblyCostPerPiece;
    private Double assemblyCosts;
    private Integer usPhysicalLoa;
    private Integer usCognitiveLoa;
    private Integer hoursPerYears;
    private Double NProdPieces;
    private Double labourCost;
    private Double energyCost;
    private Double maintCost;
    private Double annualSpaceCost;
    private Double inputedDepreciation;
    private Double rateOfPart;
    private Double accruedIntCosts;
    private Double varCostTotal;
    private Double fixedCostTotal;
    private Boolean resRecal;
    private Boolean resSorting;
    private Integer cognitiveTime;
    private Integer physicalTime;
    private Date createDate;
    private Date updateDate;

    public SubScenario() {}

    public SubScenario(Integer fkTbAceProSeq, Integer fkTbAceSubProLev, Integer fkTbAceRes, Integer scenarioNumber, Integer processTime, Boolean resRecal, Date createDate, Date updateDate) {
        this.fkTbAceProSeq = fkTbAceProSeq;
        this.fkTbAceSubProLev = fkTbAceSubProLev;
        this.fkTbAceRes = fkTbAceRes;
        this.scenarioNumber = scenarioNumber;
        this.processTime = processTime;
        this.createDate = createDate;
        this.updateDate = updateDate;
    }

    public SubScenario(int fkTbAceProSeq, int fkTbAceSubProLev, int fkTbAceRes, int scenarioNumber, int processTime, Double assemblyCostPerPiece, Double assemblyCosts, Integer usPhysicalLoa, Integer usCognitiveLoa, Integer hoursPerYears, Double NProdPieces, Double labourCost, Double energyCost, Double maintCost, Double annualSpaceCost, Double inputedDepreciation, Double rateOfPart, Double accruedIntCosts, Double varCostTotal, Double fixedCostTotal, Date createDate, Date updateDate) {
        this.fkTbAceProSeq = fkTbAceProSeq;
        this.fkTbAceSubProLev = fkTbAceSubProLev;
        this.fkTbAceRes = fkTbAceRes;
        this.scenarioNumber = scenarioNumber;
        this.processTime = processTime;
        this.assemblyCostPerPiece = assemblyCostPerPiece;
        this.assemblyCosts = assemblyCosts;
        this.usPhysicalLoa = usPhysicalLoa;
        this.usCognitiveLoa = usCognitiveLoa;
        this.hoursPerYears = hoursPerYears;
        this.NProdPieces = NProdPieces;
        this.labourCost = labourCost;
        this.energyCost = energyCost;
        this.maintCost = maintCost;
        this.annualSpaceCost = annualSpaceCost;
        this.inputedDepreciation = inputedDepreciation;
        this.rateOfPart = rateOfPart;
        this.accruedIntCosts = accruedIntCosts;
        this.varCostTotal = varCostTotal;
        this.fixedCostTotal = fixedCostTotal;
        this.createDate = createDate;
        this.updateDate = updateDate;
    }

    @Override
    @Id @GeneratedValue(strategy = IDENTITY)

    @Column(name = "PK_TB_ID", unique = true, nullable = false)
    public Integer getPkTbId() {
        return this.pkTbId;
    }

    @Override
    public void setPkTbId(Integer pkTbId) {
        this.pkTbId = pkTbId;
    }

    @Column(name = "FK_TB_ACE_PRO_SEQ", nullable = false)
    public Integer getFkTbAceProSeq() {
        return this.fkTbAceProSeq;
    }

    public void setFkTbAceProSeq(Integer fkTbAceProSeq) {
        this.fkTbAceProSeq = fkTbAceProSeq;
    }

    @Transient
    public Integer getFkTbAceSubProLev() {
        return this.fkTbAceSubProLev;
    }

    public void setFkTbAceSubProLev(Integer fkTbAceSubProLev) {
        this.fkTbAceSubProLev = fkTbAceSubProLev;
    }

    @ManyToOne
    @NotFound(action = NotFoundAction.IGNORE)
    @JoinColumn(name="FK_TB_ACE_SUB_PRO_LEV", referencedColumnName="PK_TB_ID")
    public SubProcessLevel getSubprocessLevel() {
        return subprocessLevel;
    }

    public void setSubprocessLevel(SubProcessLevel subprocessLevel) {
        this.subprocessLevel = subprocessLevel;
    }

    @Transient
    public Integer getFkTbAceRes() {
        return this.fkTbAceRes;
    }

    public void setFkTbAceRes(Integer fkTbAceRes) {
        this.fkTbAceRes = fkTbAceRes;
    }

    @ManyToOne
    @NotFound(action = NotFoundAction.IGNORE)
    @JoinColumn(name="FK_TB_ACE_RES", referencedColumnName="PK_TB_ID")
    public Resource getResource() {
        return resource;
    }

    public void setResource(Resource resource) {
        this.resource = resource;
    }

    @Column(name = "SCENARIO_NUMBER", nullable = false)
    public Integer getScenarioNumber() {
        return this.scenarioNumber;
    }

    public void setScenarioNumber(Integer scenarioNumber) {
        this.scenarioNumber = scenarioNumber;
    }

    @Column(name = "PROCESS_TIME", nullable = false)
    public Integer getProcessTime() {
        return this.processTime;
    }

    public void setProcessTime(Integer processTime) {
        this.processTime = processTime;
    }

    @Column(name = "ASSEMBLY_COST_PER_PIECE", precision = 22, scale = 0)
    public Double getAssemblyCostPerPiece() {
        return this.assemblyCostPerPiece;
    }

    public void setAssemblyCostPerPiece(Double assemblyCostPerPiece) {
        this.assemblyCostPerPiece = assemblyCostPerPiece;
    }

    @Column(name = "ASSEMBLY_COSTS", precision = 22, scale = 0)
    public Double getAssemblyCosts() {
        return this.assemblyCosts;
    }

    public void setAssemblyCosts(Double assemblyCosts) {
        this.assemblyCosts = assemblyCosts;
    }

    @Column(name = "US_PHYSICAL_LOA")
    public Integer getUsPhysicalLoa() {
        return this.usPhysicalLoa;
    }

    public void setUsPhysicalLoa(Integer usPhysicalLoa) {
        this.usPhysicalLoa = usPhysicalLoa;
    }

    @Column(name = "US_COGNITIVE_LOA")
    public Integer getUsCognitiveLoa() {
        return this.usCognitiveLoa;
    }

    public void setUsCognitiveLoa(Integer usCognitiveLoa) {
        this.usCognitiveLoa = usCognitiveLoa;
    }

    @Column(name = "HOURS_PER_YEARS")
    public Integer getHoursPerYears() {
        return this.hoursPerYears;
    }

    public void setHoursPerYears(Integer hoursPerYears) {
        this.hoursPerYears = hoursPerYears;
    }

    @Column(name = "N_PROD_PIECES", precision = 22, scale = 0)
    public Double getNProdPieces() {
        return this.NProdPieces;
    }

    public void setNProdPieces(Double NProdPieces) {
        this.NProdPieces = NProdPieces;
    }

    @Column(name = "LABOUR_COST", precision = 22, scale = 0)
    public Double getLabourCost() {
        return this.labourCost;
    }

    public void setLabourCost(Double labourCost) {
        this.labourCost = labourCost;
    }

    @Column(name = "ENERGY_COST", precision = 22, scale = 0)
    public Double getEnergyCost() {
        return this.energyCost;
    }

    public void setEnergyCost(Double energyCost) {
        this.energyCost = energyCost;
    }

    @Column(name = "MAINT_COST", precision = 22, scale = 0)
    public Double getMaintCost() {
        return this.maintCost;
    }

    public void setMaintCost(Double maintCost) {
        this.maintCost = maintCost;
    }

    @Column(name = "ANNUAL_SPACE_COST", precision = 22, scale = 0)
    public Double getAnnualSpaceCost() {
        return this.annualSpaceCost;
    }

    public void setAnnualSpaceCost(Double annualSpaceCost) {
        this.annualSpaceCost = annualSpaceCost;
    }

    @Column(name = "INPUTED_DEPRECIATION", precision = 22, scale = 0)
    public Double getInputedDepreciation() {
        return this.inputedDepreciation;
    }

    public void setInputedDepreciation(Double inputedDepreciation) {
        this.inputedDepreciation = inputedDepreciation;
    }

    @Column(name = "RATE_OF_PART", precision = 22, scale = 0)
    public Double getRateOfPart() {
        return this.rateOfPart;
    }

    public void setRateOfPart(Double rateOfPart) {
        this.rateOfPart = rateOfPart;
    }

    @Column(name = "ACCRUED_INT_COSTS", precision = 22, scale = 0)
    public Double getAccruedIntCosts() {
        return this.accruedIntCosts;
    }

    public void setAccruedIntCosts(Double accruedIntCosts) {
        this.accruedIntCosts = accruedIntCosts;
    }

    @Column(name = "VAR_COST_TOTAL", precision = 22, scale = 0)
    public Double getVarCostTotal() {
        return this.varCostTotal;
    }

    public void setVarCostTotal(Double varCostTotal) {
        this.varCostTotal = varCostTotal;
    }

    @Column(name = "FIXED_COST_TOTAL", precision = 22, scale = 0)
    public Double getFixedCostTotal() {
        return this.fixedCostTotal;
    }

    public void setFixedCostTotal(Double fixedCostTotal) {
        this.fixedCostTotal = fixedCostTotal;
    }

    @Column(name = "RES_RECAL")
    public Boolean getResRecal() {
        return this.resRecal;
    }

    public void setResRecal(Boolean resRecal) {
        this.resRecal = resRecal;
    }

    @Column(name = "RES_SORTING")
    public Boolean getResSorting() {
        return this.resSorting;
    }

    public void setResSorting(Boolean resSorting) {
        this.resSorting = resSorting;
    }

    @Column(name = "COGNITIVE_TIME", nullable = false)
    public Integer getCognitiveTime() {
	return this.cognitiveTime;
    }

    public void setCognitiveTime(Integer cognitiveTime) {
	this.cognitiveTime = cognitiveTime;
    }

    @Column(name = "PHYSICAL_TIME", nullable = false)
    public Integer getPhysicalTime() {
	return this.physicalTime;
    }

    public void setPhysicalTime(Integer physicalTime) {
	this.physicalTime = physicalTime;
    }

    @CreationTimestamp
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATE_DATE", updatable = false, nullable = false, length = 19)
    public Date getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    @UpdateTimestamp
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATE_DATE", nullable = false, length = 19)
    public Date getUpdateDate() {
        return this.updateDate;
    }

    public void setUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }

    @Override
    public String toString() {
        return "SubScenario [pkTbId=" + pkTbId + ", fkTbAceProSeq=" + fkTbAceProSeq + ", fkTbAceSubProLev=" + fkTbAceSubProLev + ", subprocessLevel=" + subprocessLevel + ", fkTbAceRes=" + fkTbAceRes + ", resource=" + resource + ", scenarioNumber=" + scenarioNumber + ", processTime=" + processTime + ", assemblyCostPerPiece=" + assemblyCostPerPiece + ", assemblyCosts=" + assemblyCosts + ", usPhysicalLoa=" + usPhysicalLoa + ", usCognitiveLoa=" + usCognitiveLoa + ", hoursPerYears=" + hoursPerYears + ", NProdPieces=" + NProdPieces + ", labourCost=" + labourCost + ", energyCost=" + energyCost + ", maintCost=" + maintCost + ", annualSpaceCost=" + annualSpaceCost + ", inputedDepreciation=" + inputedDepreciation + ", rateOfPart=" + rateOfPart + ", accruedIntCosts=" + accruedIntCosts + ", varCostTotal=" + varCostTotal + ", fixedCostTotal=" + fixedCostTotal + ", resRecal=" + resRecal + ", createDate=" + createDate + ", updateDate=" + updateDate + "]";
    }

}
